/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.Product;

import UI.User.*;
import Model.People.User;
import Model.People.UserDirectory;
import UI.Authenticate.LoginFrame;
import UI.MainFrame;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author vipul
 */
public class AddProduct extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    UserDirectory records = new UserDirectory();
    private TableRowSorter sorter;
    public AddProduct() {
        initComponents();
        //this.records = records;
        
//        populateTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGender = new javax.swing.ButtonGroup();
        btnGroupDiabetes = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        panelRegistration = new javax.swing.JPanel();
        panelPersonalInfo = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblContact = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        dateDOB = new com.toedter.calendar.JDateChooser();
        panelMedical = new javax.swing.JPanel();
        txtHeight = new javax.swing.JTextField();
        comboBloodGroup = new javax.swing.JComboBox<>();
        lblBloodGroup = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        comboDiabetic = new javax.swing.JComboBox<>();
        lblDiabetes = new javax.swing.JLabel();
        lblAllergies = new javax.swing.JLabel();
        txtAllergies = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        panelAddress = new javax.swing.JPanel();
        lblPurpose = new javax.swing.JLabel();
        lblPreference = new javax.swing.JLabel();
        comboPreference = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPurpose = new javax.swing.JList<>();
        lblWorkoutFrequency = new javax.swing.JLabel();
        comboWorkoutFrequency = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listFavorites = new javax.swing.JList<>();
        lblFavFood = new javax.swing.JLabel();
        btnView1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(66, 179, 172));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("PRODUCT-NUTRITION DASHBOARD");
        jPanel1.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jPanel1.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(939, 6, 75, -1));

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        jPanel1.add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 75, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        tabbedPane.setBackground(new java.awt.Color(255, 204, 204));
        tabbedPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabbedPane.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        panelRegistration.setBackground(new java.awt.Color(51, 51, 51));

        panelPersonalInfo.setBackground(new java.awt.Color(255, 255, 255, 150));
        panelPersonalInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelPersonalInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        panelPersonalInfo.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 210, -1));

        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });
        panelPersonalInfo.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 210, -1));

        lblGender.setText("Gender:");
        panelPersonalInfo.add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        lblDOB.setText("DOB:");
        panelPersonalInfo.add(lblDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        lblContact.setText("Contact:");
        panelPersonalInfo.add(lblContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        lblName.setText("Name:");
        panelPersonalInfo.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Non-Binary", "Other" }));
        comboGender.setSelectedIndex(-1);
        panelPersonalInfo.add(comboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 200, -1));

        lblAge.setText("Age:");
        panelPersonalInfo.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, -1, -1));

        txtAge.setEditable(false);
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });
        panelPersonalInfo.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 51, -1));

        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        panelPersonalInfo.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 210, 20));

        lblAddress.setText("Address:");
        panelPersonalInfo.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));
        panelPersonalInfo.add(dateDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 110, -1));

        panelMedical.setBackground(new java.awt.Color(255, 255, 255, 150));
        panelMedical.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Health", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelMedical.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeightKeyTyped(evt);
            }
        });
        panelMedical.add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 200, -1));

        comboBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "B+", "AB+", "O+", "A-", "B-", "AB-", "O-" }));
        panelMedical.add(comboBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 200, -1));

        lblBloodGroup.setText("Blood Group:");
        panelMedical.add(lblBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        lblWeight.setText("Weight:");
        panelMedical.add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        comboDiabetic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        comboDiabetic.setSelectedIndex(-1);
        panelMedical.add(comboDiabetic, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 200, -1));

        lblDiabetes.setText("Diabetes:");
        panelMedical.add(lblDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 109, -1, -1));

        lblAllergies.setText("Any Allergies:");
        panelMedical.add(lblAllergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 141, -1, -1));

        txtAllergies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAllergiesKeyTyped(evt);
            }
        });
        panelMedical.add(txtAllergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 200, 30));

        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWeightKeyTyped(evt);
            }
        });
        panelMedical.add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 200, -1));

        lblHeight.setText("Height:");
        panelMedical.add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        btnRegister.setBackground(new java.awt.Color(255, 51, 51));
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 51, 51));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        panelAddress.setBackground(new java.awt.Color(255, 255, 255, 150));
        panelAddress.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Diet Related", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N

        lblPurpose.setText("Purpose of Diet:");

        lblPreference.setText("Food Preference:");

        comboPreference.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegeterian", "Non-Vegeterian", "Eggiterian", "Vegan" }));
        comboPreference.setSelectedIndex(-1);
        comboPreference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPreferenceActionPerformed(evt);
            }
        });

        listPurpose.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Diebetes Control", "BP Control", "Cholestrol Control", "Weight Loss", "Weight Gain", "Core Strengthening" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listPurpose.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jScrollPane2.setViewportView(listPurpose);

        lblWorkoutFrequency.setText("Workout Frequency:");

        comboWorkoutFrequency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Never", "Rarely", "Once in a week", "Frequent" }));
        comboWorkoutFrequency.setSelectedIndex(-1);
        comboWorkoutFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboWorkoutFrequencyActionPerformed(evt);
            }
        });

        listFavorites.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Avacados", "Banana", "Eggs White", "Beans", "Whole Eggs", "Milk (Low Fat)", "Milk (Whole)", "Milk (Almond)", "Cottage Cheese", "Tofu", "Yogurt (No Sugar)", "Yogurt (With Sugar)", "Chicken", "Beaf", "Pork", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listFavorites.setDragEnabled(true);
        listFavorites.setDropMode(javax.swing.DropMode.ON);
        jScrollPane3.setViewportView(listFavorites);

        lblFavFood.setText("Favorites:");

        javax.swing.GroupLayout panelAddressLayout = new javax.swing.GroupLayout(panelAddress);
        panelAddress.setLayout(panelAddressLayout);
        panelAddressLayout.setHorizontalGroup(
            panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddressLayout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addGroup(panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddressLayout.createSequentialGroup()
                        .addComponent(lblFavFood)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddressLayout.createSequentialGroup()
                        .addComponent(lblWorkoutFrequency)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboWorkoutFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddressLayout.createSequentialGroup()
                        .addComponent(lblPreference)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddressLayout.createSequentialGroup()
                        .addComponent(lblPurpose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        panelAddressLayout.setVerticalGroup(
            panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPurpose)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPreference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPreference))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboWorkoutFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWorkoutFrequency))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addGroup(panelAddressLayout.createSequentialGroup()
                        .addComponent(lblFavFood)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btnView1.setBackground(new java.awt.Color(255, 51, 51));
        btnView1.setForeground(new java.awt.Color(255, 255, 255));
        btnView1.setText("View Details");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRegistrationLayout = new javax.swing.GroupLayout(panelRegistration);
        panelRegistration.setLayout(panelRegistrationLayout);
        panelRegistrationLayout.setHorizontalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelMedical, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegister))
                    .addComponent(panelPersonalInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnView1))
                    .addComponent(panelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelRegistrationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClear, btnRegister});

        panelRegistrationLayout.setVerticalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addComponent(panelPersonalInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelMedical, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnView1)
                    .addComponent(btnRegister))
                .addGap(15, 15, 15))
        );

        tabbedPane.addTab("Registration", panelRegistration);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, -1, -1));

        setSize(new java.awt.Dimension(1033, 648));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
       
        
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
        //Restrict the length to 256 
        if(txtName.getText().length() > 255){
                evt.consume();
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
        // TODO add your handling code here:
        char typedPhoneNumber = evt.getKeyChar();
        if(!Character.isDigit(typedPhoneNumber)){
            evt.consume();
        }
        //Restrict the length to 10 
        if(txtContact.getText().length() > 9){
                evt.consume();
        }
    }//GEN-LAST:event_txtContactKeyTyped
    
    public void resetForm(){
        
        txtName.setText(null);
        dateDOB.setDate(null);
        txtAge.setText(null);
        txtContact.setText(null);
        comboGender.setSelectedIndex(-1);
        txtAddress.setText(null);
        
        comboBloodGroup.setSelectedIndex(-1);
        txtHeight.setText(null);
        txtWeight.setText(null);
        comboDiabetic.setSelectedIndex(-1);
        txtAllergies.setText(null);
       
        listPurpose.setSelectedIndex(-1);
        listFavorites.setSelectedIndex(-1);
        comboPreference.setSelectedIndex(-1);
        comboWorkoutFrequency.setSelectedIndex(-1);
         
    }
    
    
    public LocalDate convertToLocalDateViaInstant(Date dateToConvert) {
        return dateToConvert.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }
    
    
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        
        if(true){
            //Personal Info
            String name = txtName.getText();
            Date dob = dateDOB.getDate();
            LocalDate today = LocalDate.now();
            int age = Period.between(convertToLocalDateViaInstant(dob), today).getYears();
            System.out.print(age);
            String gender = comboGender.getSelectedItem().toString();
            long contact = Long.parseLong(txtContact.getText());
            //add line for photo (ImageIcon)

           //Address
           String address = txtAddress.getText();
           
           //Health details
           String bloodGroup = comboBloodGroup.getSelectedItem().toString();
           float height = Float.parseFloat(txtHeight.getText());
           float weight = Float.parseFloat(txtWeight.getText());
           boolean diabetic;
           
           if(comboDiabetic.getSelectedItem().toString().equals("Yes")){
               diabetic = true;
           }
           else{
               diabetic = false;
           }
           
           String allergies = txtAllergies.getText();
           
           //Diet Info
           String puposeList = listPurpose.getSelectedValue();
           String preference = comboPreference.getSelectedItem().toString();
           String workoutFrequency = comboWorkoutFrequency.getSelectedItem().toString();
           List<String> favorites = listFavorites.getSelectedValuesList();
           
            User user = records.addNewUser(name, dob, age, gender, contact, address, bloodGroup, height, weight, diabetic, allergies, puposeList, preference, workoutFrequency, favorites);

           user.setName(name);
           user.setGender(gender);
           user.setPhNumber(contact);
           user.setAge(age);
           user.setAddress(address);
           
           //Health
           user.setBloodGroup(bloodGroup);
           user.setHeight(height);
           user.setWeight(weight);
           user.setAllergies(allergies);
           user.setDiabetic(diabetic);

           //Account creds
           user.setPurposeOfDiet(puposeList);
           user.setFoodPreference(preference);
           user.setWorkoutFrequency(workoutFrequency);
           user.setFavorites(favorites);
           
           JOptionPane.showMessageDialog(this, "Account Information Upodated");

           resetForm();

           System.out.println(gender);
//           populateTableData();
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        resetForm();
        AddProduct frame = new AddProduct();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        LoginFrame newLoginPage = new LoginFrame();
        newLoginPage.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        MainFrame frame = new MainFrame();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void txtHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyTyped
        // TODO add your handling code here:
        char typedAge = evt.getKeyChar();
            if(!Character.isDigit(typedAge)){
                evt.consume();
            }
            //Restrict the length to 5 
            if(txtHeight.getText().length() > 2){
                evt.consume();
            }
    }//GEN-LAST:event_txtHeightKeyTyped

    private void txtAllergiesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAllergiesKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
        //Restrict the length to 256
        if(txtAllergies.getText().length() > 255){
            evt.consume();
        }
    }//GEN-LAST:event_txtAllergiesKeyTyped

    private void txtWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightKeyTyped

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyTyped

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyTyped

    private void comboPreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPreferenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPreferenceActionPerformed

    private void comboWorkoutFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboWorkoutFrequencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboWorkoutFrequencyActionPerformed

    private void dateDOBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateDOBKeyTyped
        // TODO add your handling code here:
        Date dob = dateDOB.getDate();
        LocalDate today = LocalDate.now();
        int age = Period.between(convertToLocalDateViaInstant(dob), today).getYears();
        txtAge.setText(String.valueOf(age));
    }//GEN-LAST:event_dateDOBKeyTyped

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnView1ActionPerformed
    
    boolean isDataValid(){
//        String id, name, emailId, gender, community, city, state, username ;
//        String houseNumber, zipCode, age, bloodGroup, height, weight;
//        String contactDetails;
////        Date dob;
//        //String patternEmail = "^[A-Za-z0-9+_.-]+@(.+)$";
//        String patternEmail = "^[(a-zA-Z-0-9-\\_\\+\\.)]+@[(a-z-A-z)]+\\.[(a-zA-z)]{2,3}$";
//        String bmi = "[(0-9\\.)]{2,}$";
//               
//        id = txtDoctorID.getText();
//        name = txtName.getText();
//        emailId = txtEmail.getText();
//        contactDetails = txtContact.getText();
//        age = txtAge.getText();
////        dob = DOBtxt.getDate();
//        if(comboPurpose.getSelectedItem() == null){
//            houseNumber = "";
//        }
//        else{
//            houseNumber = comboPurpose.getSelectedItem().toString();
//        }
//        
//        
//        if(comboCommunity.getSelectedItem() == null){
//            community = "";
//        }
//        else{
//            community = comboCommunity.getSelectedItem().toString();
//        }
//        
//        
//        if(comboCity.getSelectedItem() == null){
//            city = "";
//        }
//        else{
//            city = comboCity.getSelectedItem().toString();
//        }
//        state = txtState.getText();
//        zipCode = txtZipCode.getText();
//        //bloodGroup = (String) patientBloodGroupTxt.getSelectedItem();
//        String qualification = txtQualification.getText();
//        String specialization = txtSpecialization.getText();
//        String slots = txtHeight.getText();
//        String password = new String(txtPassword.getText());
//        String rePassword = new String(txtPassword2.getPassword());
//        
//        
//       
//        if(comboGender.getSelectedItem() == null){
//            gender = "";
//        }
//        else{
//            gender = comboGender.getSelectedItem().toString(); 
//        }
//        
//        String hospital;
//        if(comboBloodGroup.getSelectedItem() == null){
//            hospital = "";
//        }
//        else{
//            hospital = comboBloodGroup.getSelectedItem().toString(); 
//        }
//        
//        
//        if (id.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter Patient ID");
//            return false;
//        }
//       
//        if (name.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter name");
//            return false;
//        }
//        
//        if (gender.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please select gender");
//            return false;
//        }
//        
//        if (hospital.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please select hospital");
//            return false;
//        }
//        
//        if (contactDetails.equals("") || !(txtContact.getText().length()==10))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter valid contact Number");
//            txtContact.setText("");
//           
//            return false;
//        }
//        //emailIDTxt.getText().isBlank() &&
//        if( !txtEmail.getText().matches(patternEmail)){
//                JOptionPane.showMessageDialog(this, "Please enter a valid Email.");
//                txtEmail.setText("");
//                return false;
//            }
//       
//        if (age.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter age");
//            return false;
//        }
//       
//        if (slots.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter number of slots available");
//            return false;
//        }
//        
//        if (qualification.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter qualification");
//            return false;
//        }
//        if (specialization.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter specialization");
//            return false;
//        }
       
       
//        if (zipCode.equals("") || !(txtZipCode.getText().length()==5))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter zipCode");
//            txtZipCode.setText("");
//            return false;
//        }
//       
//   
//       
//        if (password.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter password");
//            return false;
//        }
//       
//        if (rePassword.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter rePassword");
//            return false;
//        }
//       
//        if (!(password).equals(rePassword)){
//            JOptionPane.showMessageDialog(this, "Password doesn't match");
//            return false;
//        }
       
        return true;
       
    }
    
    private void populateTableData() {
        //Type-cast table model into default table model
//        DefaultTableModel model = (DefaultTableModel) tableView.getModel();
//        
//        sorter = new TableRowSorter<>(model);
//      
//        //tblDisplay = new JTable(model);
//        tableView.setRowSorter(sorter);
//        //Clear the table 
//        model.setRowCount(0);
//        
//        //Iterate through the records and fill row cells
//        for(Doctor p: records.getDoctorList()){
//            
//            // Create a row object (dtype: Object, size: number of columns required)
//            Object[] row = new Object[10];
//            row[0] = p.getDoctorID();
//            row[1] = p;
//            row[2] = p.getUsername();
//            row[3] = p.getGender();
//            row[4] = p.getAge();
//            row[5] = p.getPhNumber();
//            row[6] = p.hospital.getHospitalName();
//            row[7] = p.getSlotsAvailable();
//            row[8] = p.getQualification();
//            row[9] = p.getSpecialization();
//            
//            model.addRow(row);
//                  
//        }
//        
//        //--------------
//        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
//         @Override
//         public void insertUpdate(DocumentEvent e) {
//            search(txtSearch.getText());
//         }
//         @Override
//         public void removeUpdate(DocumentEvent e) {
//            search(txtSearch.getText());
//         }
//         @Override
//         public void changedUpdate(DocumentEvent e) {
//            search(txtSearch.getText());
//         }
//         public void search(String str) {
//            if (str.length() == 0) {
//               sorter.setRowFilter(null);
//            } else {
//               sorter.setRowFilter(RowFilter.regexFilter(str));
//            }
//         }
//      });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.ButtonGroup btnGroupDiabetes;
    private javax.swing.ButtonGroup btnGroupGender;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnView1;
    private javax.swing.JComboBox<String> comboBloodGroup;
    private javax.swing.JComboBox<String> comboDiabetic;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox<String> comboPreference;
    private javax.swing.JComboBox<String> comboWorkoutFrequency;
    private com.toedter.calendar.JDateChooser dateDOB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAllergies;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDiabetes;
    private javax.swing.JLabel lblFavFood;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPreference;
    private javax.swing.JLabel lblPurpose;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWorkoutFrequency;
    private javax.swing.JList<String> listFavorites;
    private javax.swing.JList<String> listPurpose;
    private javax.swing.JPanel panelAddress;
    private javax.swing.JPanel panelMedical;
    private javax.swing.JPanel panelPersonalInfo;
    private javax.swing.JPanel panelRegistration;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
